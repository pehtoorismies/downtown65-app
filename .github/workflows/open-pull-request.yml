name: Pull Request

on:
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Concurrency group name ensures concurrent workflow runs wait for any in-progress job to finish
concurrency:
  group: merge-${{ github.ref }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

env:
  STAGE_TO_USE: pr-${{ github.event.pull_request.id }}
  AWS_DEFAULT_REGION: eu-north-1
  AWS_REGION: eu-north-1
  WEBSITE_URL: https://pr-${{ github.event.pull_request.id }}.staging.downtown65.events
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  logging:
    runs-on: ubuntu-22.04
    environment: staging
    steps:
      - name: Information
        run: |
          echo "SST application stage: $STAGE_TO_USE" >> $GITHUB_STEP_SUMMARY
          echo "To remove application: sst remove --stage $STAGE_TO_USE" >> $GITHUB_STEP_SUMMARY
          echo "To visit site: $WEBSITE_URL" >> $GITHUB_STEP_SUMMARY
  build:
    runs-on: ubuntu-22.04
    environment: staging
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: corepack enable
      - name: Install
        run: |
          yarn install --immutable
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT }}:role/GitHubActionRole
          aws-region: us-east-1
          role-duration-seconds: 2500
      - name: Set default common sst secrets
        run: |
          yarn sst secrets --stage $STAGE_TO_USE set AUTH_CLIENT_SECRET ${{ secrets.AUTH_CLIENT_SECRET }}
          yarn sst secrets --stage $STAGE_TO_USE set REGISTER_SECRET ${{ secrets.REGISTER_SECRET }}
          yarn sst secrets --stage $STAGE_TO_USE set COOKIE_SECRET ${{ secrets.COOKIE_SECRET }}
      - name: Write stage to .sst/stage
        run: |
          echo $STAGE_TO_USE > .sst/stage
      - name: Build types
        run: |
          yarn sst types
      - name: Build monorepo
        run: |
          yarn build
      - uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
  lint:
    runs-on: ubuntu-22.04
    environment: staging
    needs: [ "build" ]
    steps:
      - uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: corepack enable
      - name: 'lint'
        run: yarn lint
      - name: 'stylelint'
        run: yarn stylelint
      - name: 'check package versions'
        run: yarn constraints
  typecheck:
    runs-on: ubuntu-22.04
    environment: staging
    needs: [ "build" ]
    steps:
      - uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: corepack enable
      - name: 'typecheck'
        run: yarn typecheck
  deploy:
    needs: [ "lint", "typecheck" ]
    runs-on: ubuntu-22.04
    environment: staging
    env:
      COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
    steps:
      - uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - run: corepack enable
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT }}:role/GitHubActionRole
          aws-region: us-east-1
          role-duration-seconds: 2500
      - name: Deploy infra
        env:
          AWS_DEFAULT_REGION: eu-north-1
          AWS_REGION: eu-north-1
        run: |
          yarn sst deploy | tee sst-output.txt
          varWebsiteUrl=$(cat sst-output.txt |grep CustomDomainUrl: |awk '{ print $2 }')
          echo ":rocket: Parsed website from deploy: $varWebsiteUrl" >> $GITHUB_STEP_SUMMARY
  unit_test:
    needs: [ "deploy" ]
    runs-on: ubuntu-22.04
    environment: staging
    steps:
      - uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT }}:role/GitHubActionRole
          aws-region: us-east-1
          role-duration-seconds: 2500
      - run: corepack enable
      - name: Unit test
        run: |
          yarn test
  playwright:
    needs: [ "deploy" ]
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    environment: staging
    env:
      AWS_DEFAULT_REGION: eu-north-1
      AWS_REGION: eu-north-1
    steps:
      - uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT }}:role/GitHubActionRole
          aws-region: us-east-1
          role-duration-seconds: 2500
      - run: corepack enable
      - name: Get installed Playwright version
        id: playwright-version
        working-directory: ./apps/web
        run: echo "PLAYWRIGHT_VERSION=$(yarn info --json @playwright/test  | jq -r '.children.Version')" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: ./apps/web
        run: yarn playwright install --with-deps firefox chromium webkit chrome
      - name: Run Playwright tests
        working-directory: ./apps/web
        run: |
          yarn playwright test
        env:
          BASE_URL: ${{ env.WEBSITE_URL }}
          TEST_USER_EMAIL: ${{ vars.TEST_USER_EMAIL }}
          TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
          TEST_USER_NICK: ${{ vars.TEST_USER_NICK }}
          REGISTER_SECRET: ${{ secrets.REGISTER_SECRET }}
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: ./apps/web/playwright-report/
          retention-days: 5